{"version":3,"sources":["components/Header.js","components/Movies.js","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard.js","components/Watchlist.js","components/Watched.js","components/ResultCard.js","components/Add.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","Movies","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","process","then","res","json","result","results","message","map","item","src","poster_path","alt","poster","id","state","action","type","watchlist","payload","filter","movie","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","MovieCard","Watchlist","length","Watched","ResultCard","storedMovie","find","o","storedMovieWatched","watchlistDisabled","watchedDisabled","title","release_date","substring","disabled","Add","query","setQuery","setResults","placeholder","onChange","e","preventDefault","target","data","console","log","errors","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAGaA,EAAS,WAClB,OACI,iCACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,yBAGJ,qBAAID,UAAU,YAAd,UACI,6BACI,cAAC,IAAD,CAAMC,GAAG,UAAT,sBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,IAAT,6BAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,OAAOD,UAAU,MAA1B,gC,OCrBfE,EAAS,WAClB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,qBAAU,WACNC,MAAM,sDAAD,OACqDC,mCADrD,2BAGJC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACG,SAACG,GACGT,GAAY,GACZE,EAASO,EAAOC,YAEpB,SAACb,GACGG,GAAY,GACZF,EAASD,QAIlB,IAECA,EACO,yEAAcA,EAAMc,WACjBZ,EAIN,qBAAKN,UAAU,aAAf,SACA,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,SAAf,SACI,oBAAIA,UAAU,UAAd,sBAEJ,qBAAKA,UAAU,aAAf,SACMQ,EAAMW,KAAI,SAAAC,GAAI,OACZ,sBAAKpB,UAAU,aAAf,UACI,qBAAKA,UAAU,YACf,qBACIqB,IAAG,yCAAoCD,EAAKE,aAC5CC,IAAG,UAAKH,EAAKI,OAAV,eAJsBJ,EAAKK,cAV/C,uF,cC5BA,WAACC,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,yBACD,OAAO,2BACAF,GADP,IAEIG,UAAU,CAAEF,EAAOG,SAAV,mBAAsBJ,EAAMG,cAEzC,IAAK,8BACD,OAAO,2BACAH,GADP,IAEIG,UAAWH,EAAMG,UAAUE,QACvB,SAAAC,GAAK,OAAIA,EAAMP,KAAOE,EAAOG,aAGzC,IAAK,uBACD,OAAO,2BACAJ,GADP,IAEIG,UAAWH,EAAMG,UAAUE,QACvB,SAAAC,GAAK,OAAIA,EAAMP,KAAOE,EAAOG,QAAQL,MAEzCQ,QAAQ,CAAEN,EAAOG,SAAV,mBAAsBJ,EAAMO,YAE3C,IAAK,oBACD,OAAO,2BACAP,GADP,IAEIO,QAAQP,EAAMO,QAAQF,QAAO,SAAAC,GAAK,OAAIA,EAAMP,KAAOE,EAAOG,QAAQL,MAClEI,UAAU,CAAEF,EAAOG,SAAV,mBAAsBJ,EAAMG,cAE7C,IAAK,sBACD,OAAO,2BACAH,GADP,IAEIO,QAAQP,EAAMO,QAAQF,QAAO,SAAAC,GAAK,OAAIA,EAAMP,KAAOE,EAAOG,aAEtE,QACI,OAAOJ,IC9BbQ,EAAe,CACjBL,UAAWM,aAAaC,QAAQ,aAC7BC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GACFH,QAASE,aAAaC,QAAQ,WAC5BC,KAAKC,MAAMH,aAAaC,QAAQ,YAChC,IAIMG,EAAgBC,wBAAcN,GAG9BO,EAAiB,SAAAC,GAC1B,MAA0BC,qBAAWC,EAAYV,GAAjD,mBAAOR,EAAP,KAAcmB,EAAd,KAEAnC,qBAAU,WACNyB,aAAaW,QAAQ,YAAaT,KAAKU,UAAUrB,EAAMG,YACvDM,aAAaW,QAAQ,UAAWT,KAAKU,UAAUrB,EAAMO,YACtD,CAACP,IAuBJ,OACI,cAACa,EAAcS,SAAf,CACIC,MAAO,CACHpB,UAAWH,EAAMG,UACjBI,QAASP,EAAMO,QACfiB,oBAzBgB,SAAAlB,GACxBa,EAAS,CAAEjB,KAAM,yBAA0BE,QAASE,KAyB5CmB,yBAtBqB,SAAA1B,GAC7BoB,EAAS,CAACjB,KAAM,8BAA+BE,QAASL,KAsBhD2B,kBAnBc,SAAApB,GACtBa,EAAS,CAAEjB,KAAM,uBAAwBE,QAASE,KAmB1CqB,gBAhBY,SAAArB,GACpBa,EAAS,CAACjB,KAAM,oBAAqBE,QAASE,KAgBtCsB,kBAbc,SAAAtB,GACtBa,EAAS,CAACjB,KAAM,sBAAuBE,QAASE,MAIhD,SAWKU,EAAMa,YCvDNC,EAAgB,SAAC,GAAmB,IAAlBxB,EAAiB,EAAjBA,MAAOJ,EAAU,EAAVA,KAClC,EAA4F6B,qBAAWlB,GAA/FY,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,kBAAmBC,EAArD,EAAqDA,gBAAiBC,EAAtE,EAAsEA,kBAEtE,OACI,sBAAKtD,UAAU,sBAAf,UACc,cAAT4B,GACG,qCACI,wBACI5B,UAAU,WACV0D,QAAS,kBAAMN,EAAkBpB,IAFrC,SAII,mBAAGhC,UAAU,uBAGjB,wBACIA,UAAU,WACV0D,QAAS,kBAAMP,EAAyBnB,EAAMP,KAFlD,SAII,mBAAGzB,UAAU,2BAKf,YAAT4B,GAEG,qCACA,wBACI5B,UAAU,WACV0D,QAAS,kBAAML,EAAgBrB,IAFnC,SAII,mBAAGhC,UAAU,6BAGjB,wBACIA,UAAU,WACV0D,QAAS,kBAAMJ,EAAkBtB,EAAMP,KAF3C,SAII,mBAAGzB,UAAU,+BCrCpB2D,EAAY,SAAC,GAAqB,IAAnB3B,EAAkB,EAAlBA,MAAOJ,EAAW,EAAXA,KACjC,OACE,sBAAK5B,UAAU,aAAf,UACI,qBAAKA,UAAU,YAEdgC,EAAMV,YACH,qBACID,IAAG,yCAAoCW,EAAMV,aAC7CC,IAAG,UAAKS,EAAMR,OAAX,aAGP,qBAAKxB,UAAU,kBAEnB,cAAC,EAAD,CAAe4B,KAAMA,EAAMI,MAAOA,QCZ7B4B,EAAY,WACrB,IAAO/B,EAAa4B,qBAAWlB,GAAxBV,UACP,OACI,qBAAK7B,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,SAAf,UACI,oBAAIA,UAAU,UAAd,0BAEA,uBAAMA,UAAU,aAAhB,UACK6B,EAAUgC,OADf,IAC6C,IAArBhC,EAAUgC,OAAe,QAAU,eAI9DhC,EAAUgC,OACP,qBAAK7D,UAAU,aAAf,SACK6B,EAAUV,KAAI,SAAAa,GAAK,OAChB,cAAC,EAAD,CAAWA,MAAOA,EAAOJ,KAAK,mBAIvC,oBAAI5B,UAAU,YAAd,0CCpBN8D,EAAU,WACnB,IAAQ7B,EAAYwB,qBAAWlB,GAAvBN,QACR,OACI,qBAAKjC,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,SAAf,UACI,oBAAIA,UAAU,UAAd,4BAEA,uBAAMA,UAAU,aAAhB,UACKiC,EAAQ4B,OADb,IACyC,IAAnB5B,EAAQ4B,OAAe,QAAU,eAI1D5B,EAAQ4B,OACL,qBAAK7D,UAAU,aAAf,SACKiC,EAAQd,KAAI,SAAAa,GAAK,OACd,cAAC,EAAD,CAAWA,MAAOA,EAAOJ,KAAK,iBAIvC,oBAAI5B,UAAU,YAAd,0CCrBN+D,EAAa,SAAC,GAAa,IAAZ/B,EAAW,EAAXA,MACxB,EAAwEyB,qBAAWlB,GAA3EW,EAAR,EAAQA,oBAAsBE,EAA9B,EAA8BA,kBAAmBvB,EAAjD,EAAiDA,UAAWI,EAA5D,EAA4DA,QAExD+B,EAAcnC,EAAUoC,MAAK,SAAAC,GAAC,OAAIA,EAAEzC,KAAOO,EAAMP,MACjD0C,EAAqBlC,EAAQgC,MAAK,SAAAC,GAAC,OAAIA,EAAEzC,KAAOO,EAAMP,MAEpD2C,IAAoBJ,KAExBG,EAIIE,IAAkBF,EAExB,OACI,sBAAKnE,UAAU,cAAf,UACI,qBAAKA,UAAU,iBAAf,SACKgC,EAAMV,YACH,qBAAKD,IAAG,yCAAoCW,EAAMV,aAClDC,IAAG,UAAKS,EAAMR,OAAX,aAGH,qBAAKxB,UAAU,oBAIvB,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,SAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBgC,EAAMsC,QAC7B,oBAAItE,UAAU,eAAd,SACCgC,EAAMuC,aAAevC,EAAMuC,aAAaC,UAAU,EAAG,GAAK,SAI/D,sBAAKxE,UAAU,WAAf,UACI,wBAAQA,UAAU,MACdyE,SAAUL,EACVV,QAAS,kBAAMR,EAAoBlB,IAFvC,8BAOA,wBAAQhC,UAAU,MACdyE,SAAUJ,EACVX,QAAS,kBAAMN,EAAkBpB,IAFrC,sCC1CP0C,EAAM,WACf,MAA0BvE,mBAAS,IAAnC,mBAAOwE,EAAP,KAAcC,EAAd,KACA,EAA8BzE,mBAAS,IAAvC,mBAAOc,EAAP,KAAgB4D,EAAhB,KAqBA,OACI,qBAAK7E,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,uBAAO4B,KAAK,OACZkD,YAAY,qBACZ7B,MAAO0B,EACPI,SA3BH,SAACC,GACdA,EAAEC,iBAEFL,EAASI,EAAEE,OAAOjC,OAElBtC,MAAM,qDAAD,OACoDC,mCADpD,4DACsIoE,EAAEE,OAAOjC,QAE/IpC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACsE,GACHC,QAAQC,IAAIF,GACPA,EAAKG,OAGNT,EAAW,IAFXA,EAAWM,EAAKlE,iBAmBfA,EAAQ4C,OAAS,GACd,oBAAI7D,UAAU,UAAd,SACKiB,EAAQE,KAAI,SAAAa,GAAK,OACd,6BACI,cAAC,EAAD,CAAYA,MAAOA,KADdA,EAAMP,iB,YCXhC8D,MAlBf,WACE,OACE,cAAC,EAAD,UAEE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,EAAD,eCVvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhF,MAAK,YAAkD,IAA/CiF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d0a5234b.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const Header = () => {\n    return (\n        <header>\n            <div className=\"container\">\n                <div className=\"inner-content\">\n                    <div className=\"brand\">\n                        <Link to=\"/\">Watchlist</Link>\n                    </div>\n\n                    <ul className=\"nav-links\">\n                        <li>\n                            <Link to=\"/movies\">Movies</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/\">My Watch List</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/watched\">Watched</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/add\" className=\"btn\">\n                                + Add\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </header>\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport const Movies = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    \n    useEffect(() => {\n        fetch(\n            `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`        \n        )\n        .then((res) => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true);                            \n                setItems(result.results);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n        \n        )\n    }, [])\n\n    if (error) {\n        return <div>Ошибка: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Загрузка...</div>;\n      } else {\n        return (\n            <div className=\"movie-page\">\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h1 className=\"heading\">Movies</h1>\n                </div>                \n                <div className=\"movie-grid\">                    \n                    { items.map(item => (                   \n                        <div className=\"movie-card\" key={item.id}>\n                            <div className=\"overlay\"></div>            \n                            <img \n                                src={`https://image.tmdb.org/t/p/w200${item.poster_path}`} \n                                alt={`${item.poster} Poster`}\n                            /> \n                        </div>                    \n                    )) }\n                </div>                    \n            </div>\n        </div>\n        );\n      }\n    }\n","export default (state, action) => {\n    switch (action.type) {        \n        case \"ADD_MOVIE_TO_WATCHLIST\":\n            return {\n                ...state,\n                watchlist: [action.payload, ...state.watchlist],\n            };\n            case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n                return {\n                    ...state,\n                    watchlist: state.watchlist.filter(\n                        movie => movie.id !== action.payload\n                    ),\n                };\n            case \"ADD_MOVIE_TO_WATCHED\":\n                return {\n                    ...state,\n                    watchlist: state.watchlist.filter(\n                        movie => movie.id !== action.payload.id\n                    ),\n                    watched: [action.payload, ...state.watched]\n                };\n            case \"MOVE_TO_WATCHLIST\":\n                return {\n                    ...state,\n                    watched:state.watched.filter(movie => movie.id !== action.payload.id),\n                    watchlist: [action.payload, ...state.watchlist]\n                };\n            case \"REMOVE_FROM_WATCHED\":\n                return {\n                    ...state,\n                    watched:state.watched.filter(movie => movie.id !== action.payload),\n                } \n        default:\n            return state;\n    }\n};","import React, {createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n    watchlist: localStorage.getItem('watchlist')\n     ? JSON.parse(localStorage.getItem('watchlist'))\n     : [],\n     watched: localStorage.getItem('watched')\n     ? JSON.parse(localStorage.getItem('watched'))\n     : []\n};\n\n// create content\nexport const GlobalContext = createContext(initialState);\n\n// provider components\nexport const GlobalProvider = props => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    useEffect(() => {\n        localStorage.setItem('watchlist', JSON.stringify(state.watchlist));\n        localStorage.setItem('watched', JSON.stringify(state.watched));\n    }, [state]);\n\n    // actions\n    const addMovieToWatchlist = movie => {\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n    };\n\n    const removeMovieFromWatchlist = id => {\n        dispatch({type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id})\n    }\n\n    const addMovieToWatched = movie => {\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie })\n    }\n\n    const moveToWatchlist = movie => {\n        dispatch({type: 'MOVE_TO_WATCHLIST', payload: movie})\n    }\n\n    const removeFromWatched = movie => {\n        dispatch({type: 'REMOVE_FROM_WATCHED', payload: movie})\n    }\n\n    return (\n        <GlobalContext.Provider \n            value={{ \n                watchlist: state.watchlist, \n                watched: state.watched, \n                addMovieToWatchlist,\n                removeMovieFromWatchlist,\n                addMovieToWatched,\n                moveToWatchlist,\n                removeFromWatched\n            }}\n        >\n            {props.children}\n        </GlobalContext.Provider>\n    )\n}","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const MovieControls = ({movie, type}) => {\n    const { removeMovieFromWatchlist, addMovieToWatched, moveToWatchlist, removeFromWatched } = useContext(GlobalContext);\n\n    return (\n        <div className=\"inner-card-controls\">\n            {type === 'watchlist' && (\n                <>\n                    <button \n                        className=\"ctrl-btn\"\n                        onClick={() => addMovieToWatched(movie)}\n                    >\n                        <i className=\"fa-fw far fa-eye\"></i>\n                    </button>\n\n                    <button \n                        className=\"ctrl-btn\"\n                        onClick={() => removeMovieFromWatchlist(movie.id)}\n                    >\n                        <i className=\"fa-fw fa fa-times\"></i>\n                    </button>\n                </>\n            )}\n\n            {type === 'watched' && \n            (\n                <>\n                <button \n                    className=\"ctrl-btn\"\n                    onClick={() => moveToWatchlist(movie)}\n                >\n                    <i className=\"fa-fw far fa-eye-slash\"></i>\n                </button>\n\n                <button \n                    className=\"ctrl-btn\"\n                    onClick={() => removeFromWatched(movie.id)}\n                >\n                    <i className=\"fa-fw fa fa-times\"></i>\n                </button>\n                </>\n            )\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { MovieControls } from './MovieControls';\n\nexport const MovieCard = ({ movie, type }) => {\n  return (\n    <div className=\"movie-card\">\n        <div className=\"overlay\"></div>\n\n        {movie.poster_path ? (\n            <img \n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} \n                alt={`${movie.poster} Poster`} \n            />\n        ) : (\n            <div className=\"filter-poster\"></div>\n        )}\n        <MovieControls type={type} movie={movie} />\n    </div>\n  )\n}\n","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { MovieCard } from './MovieCard';\n\nexport const Watchlist = () => {\n    const {watchlist} = useContext(GlobalContext);\n    return (\n        <div className=\"movie-page\">\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h1 className=\"heading\">My Watchlist</h1>\n\n                    <span className='count-pill'>\n                        {watchlist.length} {watchlist.length === 1 ? 'movie' : 'movies'}\n                    </span>\n                </div>    \n\n                {watchlist.length ? (\n                    <div className=\"movie-grid\">\n                        {watchlist.map(movie => (\n                            <MovieCard movie={movie} type=\"watchlist\"/>\n                        ))}    \n                    </div>    \n                ) : (\n                   <h2 className=\"no-movies\">No movies in your list</h2> \n                )}        \n            </div>\n        </div>\n    )\n}\n","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { MovieCard } from './MovieCard';\n\nexport const Watched = () => {\n    const { watched } = useContext(GlobalContext);\n    return (\n        <div className=\"movie-page\">\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h1 className=\"heading\">Watched Movies</h1>\n\n                    <span className='count-pill'>\n                        {watched.length} {watched.length === 1 ? 'movie' : 'movies'}\n                    </span>\n                </div>    \n\n                {watched.length ? (\n                    <div className=\"movie-grid\">\n                        {watched.map(movie => (\n                            <MovieCard movie={movie} type=\"watched\"/>\n                        ))}    \n                    </div>    \n                ) : (\n                   <h2 className=\"no-movies\">No movies in your list</h2> \n                )}        \n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const ResultCard = ({movie}) => {\n    const { addMovieToWatchlist , addMovieToWatched, watchlist, watched } = useContext(GlobalContext);\n\n    let storedMovie = watchlist.find(o => o.id === movie.id);\n    let storedMovieWatched = watched.find(o => o.id === movie.id);\n\n    const watchlistDisabled = storedMovie \n    ? true \n    : storedMovieWatched \n    ? true \n    : false;\n\n    const watchedDisabled = storedMovieWatched ? true : false;\n\n    return (\n        <div className=\"result-card\">\n            <div className=\"poster-wrapper\">\n                {movie.poster_path ? (\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} \n                    alt={`${movie.poster} Poster`} \n                    />\n                ) : (\n                    <div className=\"filter-poster\"></div>\n                )}\n            </div>\n\n            <div className=\"info\">\n                <div className=\"header\">\n                    <h3 className=\"title\">{movie.title}</h3>\n                    <h4 className=\"release-date\">                        \n                    {movie.release_date ? movie.release_date.substring(0, 4) : \"-\"}\n                    </h4>                    \n                </div>\n\n                <div className=\"controls\">\n                    <button className=\"btn\"\n                        disabled={watchlistDisabled}\n                        onClick={() => addMovieToWatchlist(movie)}\n                    >\n                        Add to Watchlist\n                    </button>\n\n                    <button className=\"btn\"\n                        disabled={watchedDisabled}\n                        onClick={() => addMovieToWatched(movie)}\n                    >\n                        Add to Watched\n                    </button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n","import React, { useState } from 'react'\nimport { ResultCard } from './ResultCard';\n\nexport const Add = () => {\n    const [query, setQuery] = useState(\"\");\n    const [results, setResults] = useState([]);\n\n    const onChange = (e) => {\n        e.preventDefault();\n\n        setQuery(e.target.value);\n\n        fetch(\n            `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\n        )\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data);\n                if (!data.errors) {                    \n                    setResults(data.results);\n                } else {\n                    setResults([]);\n                }\n            })\n    };\n\n    return (\n        <div className=\"add-page\">\n            <div className=\"container\">\n                <div className=\"add-content\">\n                    <div className=\"input-wrapper\">\n                        <input type=\"text\" \n                        placeholder=\"Search for a movie\"\n                        value={query}\n                        onChange={onChange}\n                        />\n                    </div>\n\n                    {results.length > 0 && (\n                        <ul className=\"results\">\n                            {results.map(movie => (                                                        \n                                <li key={movie.id}>\n                                    <ResultCard movie={movie} />\n                                </li>                             \n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Movies } from './components/Movies';\nimport { Watchlist } from './components/Watchlist';\nimport { Watched } from './components/Watched';\nimport { Add } from './components/Add';\nimport './App.css';\nimport './lib/font-awesome/css/all.min.css';\n\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n\n      <Router>\n        <Header />\n        <Routes>\n          <Route exact path=\"/\" element={<Watchlist/>} />          \n          <Route path=\"/movies\" element={<Movies/>} />        \n          <Route path=\"/watched\" element={<Watched/>} />        \n          <Route path=\"/add\" element={<Add/>} />\n        </Routes>\n      </Router>\n      \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}